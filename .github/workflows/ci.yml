name: CI
on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main
      - next

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: üß™ Check
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.11.3
    with:
      node-version: 20.x
      main-branch-name: 'main'
      number-of-agents: 3
      parallel-commands-on-agents: |
        pnpm exec nx affected --target=lint --parallel=3 --max-warnings=0
        pnpm exec nx affected --target=test --parallel=3 --ci --code-coverage
        pnpm exec nx affected --target=build
    secrets:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

  agents:
    name: ‚òÅÔ∏è Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.11.3
    with:
      node-version: 20.x
      number-of-agents: 3
    secrets:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

  publish:
    name: üì¶ Publish to NPM
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    needs: [main]
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v3

      - name: üü¢ Setup NodeJS
        uses: volta-cli/action@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: üì¶ Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: üóÇÔ∏è Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: ‚öôÔ∏è Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: üì• Install dependencies
        run: pnpm install --frozen-lockfile

      - name: üì¶ Semantic release
        run: pnpm exec semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
